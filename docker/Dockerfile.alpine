# Alternative lightweight Dockerfile using Alpine Linux
FROM python:3.9-alpine

# Set working directory
WORKDIR /app

# Install system dependencies for Alpine
RUN apk add --no-cache \
    gcc \
    musl-dev \
    linux-headers \
    libffi-dev \
    jpeg-dev \
    zlib-dev \
    freetype-dev \
    lcms2-dev \
    openjpeg-dev \
    tiff-dev \
    tk-dev \
    tcl-dev \
    harfbuzz-dev \
    fribidi-dev \
    libimagequant-dev \
    libxcb-dev \
    libpng-dev \
    tesseract-ocr \
    ffmpeg \
    curl \
    bash

# Install OpenCV dependencies for Alpine
RUN apk add --no-cache \
    opencv-dev \
    py3-opencv

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies with specific versions for Alpine
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir \
    Flask==2.3.3 \
    Werkzeug==2.3.7 \
    numpy==1.24.3 \
    pytesseract==0.3.10 \
    Pillow==10.0.0 \
    requests==2.31.0 \
    gpxpy==1.5.0 \
    pynmea2==1.19.0

# Install OpenCV separately for better compatibility
RUN pip install --no-cache-dir opencv-python-headless==4.8.1.78

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p /tmp/uploads /tmp/results

# Expose port
EXPOSE 5000

# Set environment variables
ENV FLASK_APP=pothole_api.py
ENV FLASK_ENV=production
ENV PYTHONPATH=/app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/ || exit 1

# Run the application
CMD ["python", "pothole_api.py"]
